/*
 * generated by Xtext
 */
grammar InternalMegal;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.softlang.megal.language.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.softlang.megal.language.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.softlang.megal.language.services.MegalGrammarAccess;

}

@parser::members {

 	private MegalGrammarAccess grammarAccess;
 	
    public InternalMegalParser(TokenStream input, MegalGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "MegalFile";	
   	}
   	
   	@Override
   	protected MegalGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleMegalFile
entryRuleMegalFile returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMegalFileRule()); }
	 iv_ruleMegalFile=ruleMegalFile 
	 { $current=$iv_ruleMegalFile.current; } 
	 EOF 
;

// Rule MegalFile
ruleMegalFile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMegalFileAccess().getAnnotationsMegalAnnotationParserRuleCall_0_0()); 
	    }
		lv_annotations_0_0=ruleMegalAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMegalFileRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_0_0, 
        		"MegalAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_1='model' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMegalFileAccess().getModelKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getMegalFileAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalFileRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)((	otherlv_3='import' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMegalFileAccess().getImportKeyword_3_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalFileRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getMegalFileAccess().getImportsMegalFileCrossReference_3_0_1_0()); 
	}

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMegalFileAccess().getDeclarationsMegalEntityTypeParserRuleCall_3_1_0()); 
	    }
		lv_declarations_5_0=ruleMegalEntityType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMegalFileRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_5_0, 
        		"MegalEntityType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMegalFileAccess().getDeclarationsMegalRelationshipTypeParserRuleCall_3_2_0()); 
	    }
		lv_declarations_6_0=ruleMegalRelationshipType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMegalFileRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_6_0, 
        		"MegalRelationshipType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMegalFileAccess().getDeclarationsMegalEntityParserRuleCall_3_3_0()); 
	    }
		lv_declarations_7_0=ruleMegalEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMegalFileRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_7_0, 
        		"MegalEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMegalFileAccess().getDeclarationsMegalRelationshipParserRuleCall_3_4_0()); 
	    }
		lv_declarations_8_0=ruleMegalRelationship		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMegalFileRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_8_0, 
        		"MegalRelationship");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMegalFileAccess().getDeclarationsMegalPairParserRuleCall_3_5_0()); 
	    }
		lv_declarations_9_0=ruleMegalPair		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMegalFileRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_9_0, 
        		"MegalPair");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMegalFileAccess().getBindingsMegalLinkParserRuleCall_3_6_0()); 
	    }
		lv_bindings_10_0=ruleMegalLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMegalFileRule());
	        }
       		add(
       			$current, 
       			"bindings",
        		lv_bindings_10_0, 
        		"MegalLink");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleMegalAnnotation
entryRuleMegalAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMegalAnnotationRule()); }
	 iv_ruleMegalAnnotation=ruleMegalAnnotation 
	 { $current=$iv_ruleMegalAnnotation.current; } 
	 EOF 
;

// Rule MegalAnnotation
ruleMegalAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMegalAnnotationAccess().getCommercialAtKeyword_0());
    }
(
(
		lv_key_1_0=RULE_ID
		{
			newLeafNode(lv_key_1_0, grammarAccess.getMegalAnnotationAccess().getKeyIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_1_0, 
        		"ID");
	    }

)
)(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getMegalAnnotationAccess().getValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
)?)
;





// Entry rule entryRuleMegalLink
entryRuleMegalLink returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMegalLinkRule()); }
	 iv_ruleMegalLink=ruleMegalLink 
	 { $current=$iv_ruleMegalLink.current; } 
	 EOF 
;

// Rule MegalLink
ruleMegalLink returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMegalLinkAccess().getAnnotationsMegalAnnotationParserRuleCall_0_0()); 
	    }
		lv_annotations_0_0=ruleMegalAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMegalLinkRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_0_0, 
        		"MegalAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalLinkRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getMegalLinkAccess().getLinkMegalEntityCrossReference_1_0()); 
	}

)
)(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMegalLinkAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalLinkRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getMegalLinkAccess().getFirstMegalEntityCrossReference_2_1_0()); 
	}

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMegalLinkAccess().getRightParenthesisKeyword_2_2());
    }
	otherlv_5='|->' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMegalLinkAccess().getVerticalLineHyphenMinusGreaterThanSignKeyword_2_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalLinkRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getMegalLinkAccess().getSecondMegalEntityCrossReference_2_4_0()); 
	}

)
))?	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMegalLinkAccess().getEqualsSignKeyword_3());
    }
(
(
		lv_to_8_0=RULE_STRING
		{
			newLeafNode(lv_to_8_0, grammarAccess.getMegalLinkAccess().getToSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalLinkRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"to",
        		lv_to_8_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleMegalEntityType
entryRuleMegalEntityType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMegalEntityTypeRule()); }
	 iv_ruleMegalEntityType=ruleMegalEntityType 
	 { $current=$iv_ruleMegalEntityType.current; } 
	 EOF 
;

// Rule MegalEntityType
ruleMegalEntityType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMegalEntityTypeAccess().getAnnotationsMegalAnnotationParserRuleCall_0_0()); 
	    }
		lv_annotations_0_0=ruleMegalAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMegalEntityTypeRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_0_0, 
        		"MegalAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMegalEntityTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalEntityTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)((	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMegalEntityTypeAccess().getLessThanSignKeyword_2_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalEntityTypeRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getMegalEntityTypeAccess().getSupertypeMegalEntityTypeCrossReference_2_0_1_0()); 
	}

)
))
    |(	otherlv_4='as' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMegalEntityTypeAccess().getAsKeyword_2_1_0());
    }
	otherlv_5='entity' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMegalEntityTypeAccess().getEntityKeyword_2_1_1());
    }
)))
;





// Entry rule entryRuleMegalRelationshipType
entryRuleMegalRelationshipType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMegalRelationshipTypeRule()); }
	 iv_ruleMegalRelationshipType=ruleMegalRelationshipType 
	 { $current=$iv_ruleMegalRelationshipType.current; } 
	 EOF 
;

// Rule MegalRelationshipType
ruleMegalRelationshipType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMegalRelationshipTypeAccess().getAnnotationsMegalAnnotationParserRuleCall_0_0()); 
	    }
		lv_annotations_0_0=ruleMegalAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMegalRelationshipTypeRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_0_0, 
        		"MegalAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMegalRelationshipTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalRelationshipTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMegalRelationshipTypeAccess().getLessThanSignKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalRelationshipTypeRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getMegalRelationshipTypeAccess().getLeftMegalEntityTypeCrossReference_3_0()); 
	}

)
)(	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMegalRelationshipTypeAccess().getLeftSquareBracketKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalRelationshipTypeRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getMegalRelationshipTypeAccess().getLeftParamsMegalEntityCrossReference_4_1_0()); 
	}

)
)(	otherlv_6='->' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMegalRelationshipTypeAccess().getHyphenMinusGreaterThanSignKeyword_4_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalRelationshipTypeRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getMegalRelationshipTypeAccess().getLeftParamsMegalEntityCrossReference_4_2_1_0()); 
	}

)
))*	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMegalRelationshipTypeAccess().getRightSquareBracketKeyword_4_3());
    }
)?((
(
		lv_leftBoth_9_0=	'(+)' 
    {
        newLeafNode(lv_leftBoth_9_0, grammarAccess.getMegalRelationshipTypeAccess().getLeftBothLeftParenthesisPlusSignRightParenthesisKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalRelationshipTypeRule());
	        }
       		setWithLastConsumed($current, "leftBoth", true, "(+)");
	    }

)
)
    |(
(
		lv_leftMany_10_0=	'+' 
    {
        newLeafNode(lv_leftMany_10_0, grammarAccess.getMegalRelationshipTypeAccess().getLeftManyPlusSignKeyword_5_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalRelationshipTypeRule());
	        }
       		setWithLastConsumed($current, "leftMany", true, "+");
	    }

)
))?	otherlv_11='*' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMegalRelationshipTypeAccess().getAsteriskKeyword_6());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalRelationshipTypeRule());
	        }
        }
	otherlv_12=RULE_ID
	{
		newLeafNode(otherlv_12, grammarAccess.getMegalRelationshipTypeAccess().getRightMegalEntityTypeCrossReference_7_0()); 
	}

)
)(	otherlv_13='[' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getMegalRelationshipTypeAccess().getLeftSquareBracketKeyword_8_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalRelationshipTypeRule());
	        }
        }
	otherlv_14=RULE_ID
	{
		newLeafNode(otherlv_14, grammarAccess.getMegalRelationshipTypeAccess().getRightParamsMegalEntityCrossReference_8_1_0()); 
	}

)
)(	otherlv_15='->' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getMegalRelationshipTypeAccess().getHyphenMinusGreaterThanSignKeyword_8_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalRelationshipTypeRule());
	        }
        }
	otherlv_16=RULE_ID
	{
		newLeafNode(otherlv_16, grammarAccess.getMegalRelationshipTypeAccess().getRightParamsMegalEntityCrossReference_8_2_1_0()); 
	}

)
))*	otherlv_17=']' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getMegalRelationshipTypeAccess().getRightSquareBracketKeyword_8_3());
    }
)?((
(
		lv_rightBoth_18_0=	'(+)' 
    {
        newLeafNode(lv_rightBoth_18_0, grammarAccess.getMegalRelationshipTypeAccess().getRightBothLeftParenthesisPlusSignRightParenthesisKeyword_9_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalRelationshipTypeRule());
	        }
       		setWithLastConsumed($current, "rightBoth", true, "(+)");
	    }

)
)
    |(
(
		lv_rightMany_19_0=	'+' 
    {
        newLeafNode(lv_rightMany_19_0, grammarAccess.getMegalRelationshipTypeAccess().getRightManyPlusSignKeyword_9_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalRelationshipTypeRule());
	        }
       		setWithLastConsumed($current, "rightMany", true, "+");
	    }

)
))?)
;





// Entry rule entryRuleMegalEntity
entryRuleMegalEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMegalEntityRule()); }
	 iv_ruleMegalEntity=ruleMegalEntity 
	 { $current=$iv_ruleMegalEntity.current; } 
	 EOF 
;

// Rule MegalEntity
ruleMegalEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMegalEntityAccess().getAnnotationsMegalAnnotationParserRuleCall_0_0()); 
	    }
		lv_annotations_0_0=ruleMegalAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMegalEntityRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_0_0, 
        		"MegalAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMegalEntityAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMegalEntityAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalEntityRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getMegalEntityAccess().getTypeMegalEntityTypeCrossReference_3_0()); 
	}

)
)(	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMegalEntityAccess().getLeftSquareBracketKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalEntityRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getMegalEntityAccess().getParamsMegalEntityCrossReference_4_1_0()); 
	}

)
)(	otherlv_6='->' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMegalEntityAccess().getHyphenMinusGreaterThanSignKeyword_4_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalEntityRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getMegalEntityAccess().getParamsMegalEntityCrossReference_4_2_1_0()); 
	}

)
))*	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMegalEntityAccess().getRightSquareBracketKeyword_4_3());
    }
)?(
(
		lv_many_9_0=	'+' 
    {
        newLeafNode(lv_many_9_0, grammarAccess.getMegalEntityAccess().getManyPlusSignKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalEntityRule());
	        }
       		setWithLastConsumed($current, "many", true, "+");
	    }

)
)?)
;





// Entry rule entryRuleMegalRelationship
entryRuleMegalRelationship returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMegalRelationshipRule()); }
	 iv_ruleMegalRelationship=ruleMegalRelationship 
	 { $current=$iv_ruleMegalRelationship.current; } 
	 EOF 
;

// Rule MegalRelationship
ruleMegalRelationship returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMegalRelationshipAccess().getAnnotationsMegalAnnotationParserRuleCall_0_0()); 
	    }
		lv_annotations_0_0=ruleMegalAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMegalRelationshipRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_0_0, 
        		"MegalAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalRelationshipRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getMegalRelationshipAccess().getLeftMegalEntityCrossReference_1_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalRelationshipRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getMegalRelationshipAccess().getTypeMegalRelationshipTypeCrossReference_2_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalRelationshipRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getMegalRelationshipAccess().getRightMegalEntityCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleMegalPair
entryRuleMegalPair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMegalPairRule()); }
	 iv_ruleMegalPair=ruleMegalPair 
	 { $current=$iv_ruleMegalPair.current; } 
	 EOF 
;

// Rule MegalPair
ruleMegalPair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMegalPairAccess().getAnnotationsMegalAnnotationParserRuleCall_0_0()); 
	    }
		lv_annotations_0_0=ruleMegalAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMegalPairRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_0_0, 
        		"MegalAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalPairRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getMegalPairAccess().getSetMegalEntityCrossReference_1_0()); 
	}

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMegalPairAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalPairRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getMegalPairAccess().getFirstMegalEntityCrossReference_3_0()); 
	}

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMegalPairAccess().getRightParenthesisKeyword_4());
    }
	otherlv_5='|->' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMegalPairAccess().getVerticalLineHyphenMinusGreaterThanSignKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMegalPairRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getMegalPairAccess().getSecondMegalEntityCrossReference_6_0()); 
	}

)
))
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_'|'0'..'9')+ ('.' ('a'..'z'|'A'..'Z'|'_'|'0'..'9')+)*;

RULE_STRING : '\'' ('\\' .|~(('\\'|'\'')))* '\'';

RULE_COMMENT : ('/*' ( options {greedy=false;} : . )*'*/'|'//' ~(('\n'|'\r'))* ('\r'? '\n')?);

RULE_WS : (' '|'\t'|'\r'|'\n')+;


